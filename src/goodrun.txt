Reading data from C:/Users/User/git/CART-method_with_randomf-forest_and_decision-forest/Data/iris/iris.csv
Preprocessing data...
Splitting data into training and testing sets...
Building random forest for ... iris
Hyperparameter tuning for Random Forest...
Testing configuration with 1 trees and 1 features.
Configuration: 1 trees, 1 features, Accuracy: 0.95, Feature counts: {'petal width': 1, 'petal length': 1}
Testing configuration with 1 trees and 2 features.
Configuration: 1 trees, 2 features, Accuracy: 0.94, Feature counts: {'petal length': 2}
Testing configuration with 1 trees and 3 features.
Configuration: 1 trees, 3 features, Accuracy: 0.95, Feature counts: {'petal width': 1, 'petal length': 1}
Testing configuration with 1 trees and 4 features.
Configuration: 1 trees, 4 features, Accuracy: 0.83, Feature counts: {'sepal length': 1, 'petal width': 1}
Testing configuration with 10 trees and 1 features.
Configuration: 10 trees, 1 features, Accuracy: 0.90, Feature counts: {'sepal length': 11, 'petal width': 11, 'sepal width': 9, 'petal length': 5}
Testing configuration with 10 trees and 2 features.
Configuration: 10 trees, 2 features, Accuracy: 0.97, Feature counts: {'petal length': 9, 'petal width': 8, 'sepal length': 4, 'sepal width': 3}
Testing configuration with 10 trees and 3 features.
Configuration: 10 trees, 3 features, Accuracy: 0.95, Feature counts: {'petal length': 11, 'petal width': 7, 'sepal length': 2}
Testing configuration with 10 trees and 4 features.
Configuration: 10 trees, 4 features, Accuracy: 0.95, Feature counts: {'petal width': 12, 'petal length': 6, 'sepal width': 1, 'sepal length': 1}
Testing configuration with 25 trees and 1 features.
Configuration: 25 trees, 1 features, Accuracy: 0.94, Feature counts: {'petal width': 27, 'sepal length': 19, 'petal length': 18, 'sepal width': 15}
Testing configuration with 25 trees and 2 features.
Configuration: 25 trees, 2 features, Accuracy: 0.95, Feature counts: {'petal length': 21, 'petal width': 19, 'sepal length': 7, 'sepal width': 5}
Testing configuration with 25 trees and 3 features.
Configuration: 25 trees, 3 features, Accuracy: 0.95, Feature counts: {'petal width': 23, 'petal length': 20, 'sepal width': 4, 'sepal length': 3}
Testing configuration with 25 trees and 4 features.
Configuration: 25 trees, 4 features, Accuracy: 0.95, Feature counts: {'petal length': 23, 'petal width': 20, 'sepal length': 5, 'sepal width': 2}
Testing configuration with 50 trees and 1 features.
Configuration: 50 trees, 1 features, Accuracy: 0.88, Feature counts: {'sepal width': 43, 'sepal length': 38, 'petal width': 37, 'petal length': 31}
Testing configuration with 50 trees and 2 features.
Configuration: 50 trees, 2 features, Accuracy: 0.95, Feature counts: {'petal width': 45, 'petal length': 41, 'sepal length': 15, 'sepal width': 5}
Testing configuration with 50 trees and 3 features.
Configuration: 50 trees, 3 features, Accuracy: 0.95, Feature counts: {'petal width': 50, 'petal length': 40, 'sepal width': 8, 'sepal length': 4}
Testing configuration with 50 trees and 4 features.
Configuration: 50 trees, 4 features, Accuracy: 0.95, Feature counts: {'petal width': 48, 'petal length': 39, 'sepal length': 10, 'sepal width': 3}
Testing configuration with 75 trees and 1 features.
Configuration: 75 trees, 1 features, Accuracy: 0.93, Feature counts: {'petal width': 64, 'sepal length': 51, 'petal length': 50, 'sepal width': 45}
Testing configuration with 75 trees and 2 features.
Configuration: 75 trees, 2 features, Accuracy: 0.94, Feature counts: {'petal width': 77, 'petal length': 49, 'sepal length': 29, 'sepal width': 13}
Testing configuration with 75 trees and 3 features.
Configuration: 75 trees, 3 features, Accuracy: 0.95, Feature counts: {'petal width': 76, 'petal length': 55, 'sepal length': 12, 'sepal width': 7}
Testing configuration with 75 trees and 4 features.
Configuration: 75 trees, 4 features, Accuracy: 0.95, Feature counts: {'petal width': 73, 'petal length': 58, 'sepal length': 16, 'sepal width': 3}
Testing configuration with 100 trees and 1 features.
Configuration: 100 trees, 1 features, Accuracy: 0.94, Feature counts: {'petal width': 89, 'sepal width': 86, 'sepal length': 77, 'petal length': 69}
Testing configuration with 100 trees and 2 features.
Configuration: 100 trees, 2 features, Accuracy: 0.93, Feature counts: {'petal length': 81, 'petal width': 80, 'sepal length': 45, 'sepal width': 16}
Testing configuration with 100 trees and 3 features.
Configuration: 100 trees, 3 features, Accuracy: 0.94, Feature counts: {'petal width': 96, 'petal length': 91, 'sepal length': 12, 'sepal width': 3}
Testing configuration with 100 trees and 4 features.
Configuration: 100 trees, 4 features, Accuracy: 0.95, Feature counts: {'petal width': 91, 'petal length': 85, 'sepal length': 15, 'sepal width': 9}
Best configuration: 10 trees, 2 features
Highest accuracy: 0.975
Feature counts for best configuration: {'petal length': 9, 'petal width': 8, 'sepal length': 4, 'sepal width': 3}
Building decision forest for ... iris
Hyperparameter tuning for Decision Forest...
Testing configuration with 1 trees and 1 features.
Configuration: 1 trees, 1 features, Accuracy: 0.95, Feature counts: {'petal width': 2}
Testing configuration with 1 trees and 2 features.
Configuration: 1 trees, 2 features, Accuracy: 0.94, Feature counts: {'petal length': 2}
Testing configuration with 1 trees and 3 features.
Configuration: 1 trees, 3 features, Accuracy: 0.95, Feature counts: {'petal width': 2}
Testing configuration with 1 trees and 4 features.
Configuration: 1 trees, 4 features, Accuracy: 0.95, Feature counts: {'petal width': 1, 'petal length': 1}
Testing configuration with 10 trees and 1 features.
Configuration: 10 trees, 1 features, Accuracy: 0.93, Feature counts: {'sepal width': 30, 'petal length': 8, 'sepal length': 6, 'petal width': 4}
Testing configuration with 10 trees and 2 features.
Configuration: 10 trees, 2 features, Accuracy: 0.93, Feature counts: {'sepal width': 30, 'petal length': 8, 'petal width': 6}
Testing configuration with 10 trees and 3 features.
Configuration: 10 trees, 3 features, Accuracy: 0.93, Feature counts: {'sepal length': 12, 'petal width': 8, 'petal length': 8}
Testing configuration with 10 trees and 4 features.
Configuration: 10 trees, 4 features, Accuracy: 0.93, Feature counts: {'sepal width': 11, 'petal length': 9, 'sepal length': 8, 'petal width': 5}
Testing configuration with 25 trees and 1 features.
Configuration: 25 trees, 1 features, Accuracy: 0.93, Feature counts: {'sepal width': 50, 'sepal length': 24, 'petal length': 22, 'petal width': 10}
Testing configuration with 25 trees and 2 features.
Configuration: 25 trees, 2 features, Accuracy: 0.93, Feature counts: {'sepal width': 36, 'sepal length': 18, 'petal length': 17, 'petal width': 13}
Testing configuration with 25 trees and 3 features.
Configuration: 25 trees, 3 features, Accuracy: 0.95, Feature counts: {'sepal width': 41, 'petal width': 24, 'sepal length': 14, 'petal length': 12}
Testing configuration with 25 trees and 4 features.
Configuration: 25 trees, 4 features, Accuracy: 0.95, Feature counts: {'sepal length': 30, 'petal width': 23, 'petal length': 17}
Testing configuration with 50 trees and 1 features.
Configuration: 50 trees, 1 features, Accuracy: 0.78, Feature counts: {'sepal width': 220, 'sepal length': 66, 'petal width': 18, 'petal length': 16}
Testing configuration with 50 trees and 2 features.
Configuration: 50 trees, 2 features, Accuracy: 0.95, Feature counts: {'petal width': 54, 'sepal width': 51, 'sepal length': 32, 'petal length': 24}
Testing configuration with 50 trees and 3 features.
Configuration: 50 trees, 3 features, Accuracy: 0.93, Feature counts: {'petal length': 43, 'sepal length': 36, 'petal width': 35, 'sepal width': 33}
Testing configuration with 50 trees and 4 features.
Configuration: 50 trees, 4 features, Accuracy: 0.95, Feature counts: {'petal width': 43, 'petal length': 39, 'sepal length': 30, 'sepal width': 23}
Testing configuration with 75 trees and 1 features.
Configuration: 75 trees, 1 features, Accuracy: 0.85, Feature counts: {'sepal width': 170, 'sepal length': 126, 'petal length': 42, 'petal width': 32}
Testing configuration with 75 trees and 2 features.
Configuration: 75 trees, 2 features, Accuracy: 0.93, Feature counts: {'sepal width': 135, 'sepal length': 70, 'petal length': 50, 'petal width': 44}
Testing configuration with 75 trees and 3 features.
Configuration: 75 trees, 3 features, Accuracy: 0.95, Feature counts: {'petal width': 78, 'sepal width': 66, 'sepal length': 42, 'petal length': 38}
Testing configuration with 75 trees and 4 features.
Configuration: 75 trees, 4 features, Accuracy: 0.95, Feature counts: {'petal width': 74, 'petal length': 52, 'sepal length': 48, 'sepal width': 23}
Testing configuration with 100 trees and 1 features.
Configuration: 100 trees, 1 features, Accuracy: 0.85, Feature counts: {'sepal width': 270, 'sepal length': 150, 'petal length': 52, 'petal width': 44}
Testing configuration with 100 trees and 2 features.
Configuration: 100 trees, 2 features, Accuracy: 0.93, Feature counts: {'sepal width': 163, 'petal width': 75, 'petal length': 67, 'sepal length': 66}
Testing configuration with 100 trees and 3 features.
Configuration: 100 trees, 3 features, Accuracy: 0.93, Feature counts: {'sepal width': 135, 'petal width': 89, 'petal length': 59, 'sepal length': 58}
Testing configuration with 100 trees and 4 features.
Configuration: 100 trees, 4 features, Accuracy: 0.95, Feature counts: {'petal width': 104, 'sepal width': 76, 'petal length': 56, 'sepal length': 54}
Best configuration: 1 trees, 1 features
Highest accuracy: 0.95
Feature counts for best configuration: {'petal width': 2}
Reading data from C:/Users/User/git/CART-method_with_randomf-forest_and_decision-forest/Data/wdbc/wdbc.csv
Preprocessing data...
Splitting data into training and testing sets...
Building random forest for ... wdbc
Hyperparameter tuning for Random Forest...
Testing configuration with 1 trees and 1 features.
Configuration: 1 trees, 1 features, Accuracy: 0.87, Feature counts: {'area1': 1}
Testing configuration with 1 trees and 2 features.
Configuration: 1 trees, 2 features, Accuracy: 0.82, Feature counts: {'concavity2': 1, 'area2': 1, 'area3': 1, 'texture1': 1}
Testing configuration with 1 trees and 4 features.
Configuration: 1 trees, 4 features, Accuracy: 0.89, Feature counts: {'compactness3': 1, 'perimeter2': 1, 'concave_points1': 1}
Testing configuration with 1 trees and 5 features.
Configuration: 1 trees, 5 features, Accuracy: 0.91, Feature counts: {'concave_points3': 1}
Testing configuration with 10 trees and 1 features.
Configuration: 10 trees, 1 features, Accuracy: 0.91, Feature counts: {'area3': 3, 'symmetry3': 3, 'smoothness3': 3, 'radius3': 2, 'texture3': 2, 'radius1': 2, 'perimeter3': 2, 'area1': 1, 'smoothness1': 1, 'compactness2': 1, 'concave_points2': 1, 'fractal_dimension1': 1, 'symmetry2': 1, 'compactness1': 1, 'smoothness2': 1, 'area2': 1, 'fractal_dimension2': 1, 'concavity1': 1}
Testing configuration with 10 trees and 2 features.
Configuration: 10 trees, 2 features, Accuracy: 0.93, Feature counts: {'concave_points1': 4, 'area3': 3, 'compactness1': 2, 'perimeter3': 2, 'radius2': 2, 'compactness2': 2, 'area2': 2, 'smoothness2': 2, 'symmetry1': 1, 'concavity2': 1, 'compactness3': 1, 'concave_points2': 1, 'concave_points3': 1, 'perimeter1': 1, 'texture1': 1, 'concavity3': 1, 'texture3': 1, 'radius1': 1}
Testing configuration with 10 trees and 4 features.
Configuration: 10 trees, 4 features, Accuracy: 0.90, Feature counts: {'perimeter3': 3, 'perimeter1': 2, 'concave_points3': 2, 'area3': 2, 'radius3': 2, 'area2': 1, 'radius1': 1, 'concavity1': 1, 'concave_points1': 1, 'smoothness1': 1, 'fractal_dimension3': 1, 'concavity3': 1, 'area1': 1}
Testing configuration with 10 trees and 5 features.
Configuration: 10 trees, 5 features, Accuracy: 0.90, Feature counts: {'radius3': 2, 'perimeter3': 2, 'area2': 2, 'area3': 2, 'perimeter2': 1, 'concave_points1': 1, 'perimeter1': 1}
Testing configuration with 25 trees and 1 features.
Configuration: 25 trees, 1 features, Accuracy: 0.92, Feature counts: {'concave_points1': 8, 'concavity2': 6, 'texture1': 6, 'area3': 6, 'compactness1': 5, 'compactness3': 5, 'symmetry2': 5, 'concavity3': 5, 'fractal_dimension1': 4, 'concave_points2': 4, 'area2': 4, 'radius2': 4, 'symmetry3': 4, 'perimeter1': 4, 'area1': 4, 'smoothness3': 3, 'fractal_dimension3': 3, 'compactness2': 3, 'concavity1': 3, 'texture3': 3, 'radius3': 2, 'texture2': 2, 'perimeter3': 2, 'radius1': 2, 'fractal_dimension2': 2, 'smoothness1': 2, 'perimeter2': 2, 'smoothness2': 1, 'concave_points3': 1}
Testing configuration with 25 trees and 2 features.
Configuration: 25 trees, 2 features, Accuracy: 0.92, Feature counts: {'radius3': 5, 'concave_points3': 5, 'perimeter1': 5, 'radius1': 4, 'area2': 3, 'perimeter3': 3, 'concavity1': 3, 'concave_points1': 3, 'texture1': 3, 'radius2': 3, 'compactness1': 3, 'area1': 2, 'smoothness2': 2, 'area3': 1, 'symmetry2': 1, 'texture3': 1, 'concave_points2': 1, 'compactness3': 1, 'texture2': 1, 'compactness2': 1, 'smoothness1': 1, 'concavity3': 1}
Testing configuration with 25 trees and 4 features.
Configuration: 25 trees, 4 features, Accuracy: 0.93, Feature counts: {'concave_points3': 5, 'perimeter1': 5, 'area3': 4, 'radius1': 3, 'perimeter3': 3, 'texture3': 3, 'area2': 3, 'concavity1': 3, 'concave_points1': 3, 'area1': 2, 'concavity3': 2, 'compactness1': 2, 'smoothness1': 1, 'radius3': 1}
Testing configuration with 25 trees and 5 features.
Configuration: 25 trees, 5 features, Accuracy: 0.91, Feature counts: {'area3': 5, 'radius3': 5, 'perimeter3': 5, 'concave_points3': 5, 'concave_points1': 3, 'area1': 2, 'texture3': 2, 'texture1': 1, 'smoothness3': 1, 'concavity1': 1, 'area2': 1}
Testing configuration with 50 trees and 1 features.
Configuration: 50 trees, 1 features, Accuracy: 0.93, Feature counts: {'concavity1': 12, 'texture2': 11, 'area1': 10, 'symmetry2': 10, 'symmetry1': 9, 'symmetry3': 9, 'compactness1': 9, 'concave_points3': 9, 'compactness2': 8, 'perimeter3': 8, 'radius2': 8, 'compactness3': 8, 'fractal_dimension2': 7, 'texture3': 7, 'area3': 7, 'concavity2': 7, 'concavity3': 6, 'area2': 6, 'smoothness3': 6, 'texture1': 6, 'smoothness2': 6, 'smoothness1': 6, 'radius1': 6, 'perimeter2': 6, 'perimeter1': 5, 'radius3': 5, 'concave_points1': 5, 'fractal_dimension1': 5, 'concave_points2': 5, 'fractal_dimension3': 4}
Testing configuration with 50 trees and 2 features.
Configuration: 50 trees, 2 features, Accuracy: 0.92, Feature counts: {'perimeter3': 10, 'radius3': 8, 'radius2': 6, 'perimeter1': 6, 'area1': 5, 'radius1': 5, 'concavity3': 5, 'area3': 5, 'texture1': 5, 'smoothness1': 4, 'compactness1': 4, 'compactness2': 4, 'area2': 4, 'fractal_dimension2': 4, 'perimeter2': 3, 'concave_points1': 3, 'texture3': 3, 'concavity1': 3, 'concave_points3': 3, 'compactness3': 2, 'fractal_dimension1': 2, 'symmetry2': 2, 'concavity2': 2, 'fractal_dimension3': 1, 'concave_points2': 1, 'smoothness3': 1, 'symmetry3': 1}
Testing configuration with 50 trees and 4 features.
Configuration: 50 trees, 4 features, Accuracy: 0.91, Feature counts: {'area3': 12, 'perimeter3': 8, 'perimeter1': 7, 'concavity1': 5, 'radius3': 5, 'concave_points3': 5, 'area2': 5, 'fractal_dimension3': 3, 'concavity2': 3, 'area1': 3, 'compactness1': 3, 'radius1': 3, 'concave_points2': 2, 'fractal_dimension1': 2, 'concave_points1': 2, 'compactness3': 2, 'concavity3': 1, 'perimeter2': 1, 'fractal_dimension2': 1, 'radius2': 1, 'texture1': 1, 'smoothness3': 1, 'compactness2': 1}
Testing configuration with 50 trees and 5 features.
Configuration: 50 trees, 5 features, Accuracy: 0.92, Feature counts: {'area3': 10, 'concavity1': 9, 'radius3': 7, 'perimeter3': 6, 'area1': 5, 'area2': 4, 'radius1': 4, 'concave_points1': 3, 'perimeter2': 3, 'concave_points3': 3, 'radius2': 2, 'perimeter1': 2, 'concave_points2': 2, 'texture3': 1, 'concavity3': 1, 'symmetry1': 1, 'compactness3': 1, 'fractal_dimension3': 1, 'concavity2': 1, 'symmetry2': 1, 'compactness1': 1, 'smoothness3': 1, 'texture1': 1}
Testing configuration with 75 trees and 1 features.
Configuration: 75 trees, 1 features, Accuracy: 0.94, Feature counts: {'radius3': 20, 'concavity3': 17, 'radius2': 16, 'smoothness2': 15, 'concavity2': 13, 'area1': 13, 'concave_points3': 13, 'perimeter2': 12, 'fractal_dimension3': 12, 'texture1': 11, 'smoothness1': 11, 'symmetry3': 11, 'concavity1': 10, 'perimeter1': 10, 'texture2': 9, 'concave_points2': 9, 'compactness2': 9, 'compactness1': 9, 'smoothness3': 9, 'symmetry2': 8, 'area3': 8, 'fractal_dimension1': 8, 'concave_points1': 8, 'perimeter3': 7, 'fractal_dimension2': 6, 'radius1': 6, 'area2': 6, 'symmetry1': 6, 'texture3': 5, 'compactness3': 2}
Testing configuration with 75 trees and 2 features.
Configuration: 75 trees, 2 features, Accuracy: 0.92, Feature counts: {'perimeter1': 13, 'area3': 12, 'radius2': 11, 'concave_points1': 11, 'area2': 10, 'concavity1': 10, 'area1': 10, 'radius3': 9, 'perimeter3': 8, 'texture1': 7, 'radius1': 7, 'concave_points3': 7, 'compactness1': 7, 'compactness3': 6, 'concavity3': 6, 'fractal_dimension3': 6, 'smoothness2': 5, 'concavity2': 5, 'smoothness1': 4, 'symmetry1': 4, 'symmetry3': 4, 'fractal_dimension1': 3, 'concave_points2': 3, 'fractal_dimension2': 2, 'perimeter2': 2, 'symmetry2': 2, 'compactness2': 1, 'texture2': 1, 'texture3': 1}
Testing configuration with 75 trees and 4 features.
Configuration: 75 trees, 4 features, Accuracy: 0.92, Feature counts: {'perimeter1': 14, 'concavity3': 13, 'radius1': 12, 'perimeter3': 11, 'concave_points1': 10, 'area3': 10, 'concave_points3': 9, 'area1': 7, 'area2': 7, 'radius2': 6, 'radius3': 6, 'concavity1': 5, 'texture1': 3, 'compactness2': 3, 'compactness3': 3, 'perimeter2': 3, 'concave_points2': 2, 'compactness1': 2, 'smoothness3': 2, 'texture3': 1, 'fractal_dimension2': 1, 'symmetry3': 1}
Testing configuration with 75 trees and 5 features.
Configuration: 75 trees, 5 features, Accuracy: 0.91, Feature counts: {'perimeter3': 14, 'radius3': 14, 'area1': 10, 'area3': 9, 'concave_points3': 9, 'radius1': 7, 'concavity1': 6, 'perimeter1': 6, 'perimeter2': 5, 'area2': 5, 'concavity2': 5, 'concavity3': 4, 'concave_points1': 3, 'compactness2': 1, 'texture3': 1, 'smoothness3': 1, 'texture1': 1, 'fractal_dimension2': 1, 'symmetry3': 1, 'compactness3': 1, 'concave_points2': 1}
Testing configuration with 100 trees and 1 features.
Configuration: 100 trees, 1 features, Accuracy: 0.92, Feature counts: {'compactness3': 22, 'area2': 18, 'area1': 18, 'texture3': 17, 'concavity3': 17, 'perimeter1': 16, 'texture1': 15, 'area3': 15, 'concavity1': 15, 'fractal_dimension3': 15, 'concave_points3': 15, 'symmetry2': 15, 'concave_points1': 14, 'smoothness1': 13, 'texture2': 13, 'perimeter2': 13, 'smoothness2': 12, 'radius1': 12, 'fractal_dimension1': 12, 'radius2': 12, 'compactness2': 12, 'symmetry1': 12, 'concave_points2': 12, 'compactness1': 12, 'concavity2': 11, 'perimeter3': 11, 'fractal_dimension2': 11, 'symmetry3': 10, 'smoothness3': 9, 'radius3': 5}
Testing configuration with 100 trees and 2 features.
Configuration: 100 trees, 2 features, Accuracy: 0.92, Feature counts: {'concave_points3': 21, 'concave_points1': 16, 'radius1': 16, 'perimeter2': 15, 'perimeter1': 14, 'radius3': 14, 'area2': 12, 'concavity1': 11, 'concavity3': 11, 'smoothness3': 9, 'area1': 9, 'compactness1': 8, 'texture1': 8, 'perimeter3': 8, 'area3': 8, 'compactness3': 7, 'compactness2': 7, 'radius2': 7, 'symmetry3': 6, 'concave_points2': 6, 'texture2': 4, 'fractal_dimension1': 4, 'fractal_dimension3': 4, 'texture3': 4, 'concavity2': 3, 'symmetry1': 3, 'fractal_dimension2': 3, 'smoothness1': 3, 'smoothness2': 2, 'symmetry2': 2}
Testing configuration with 100 trees and 4 features.
Configuration: 100 trees, 4 features, Accuracy: 0.92, Feature counts: {'perimeter3': 16, 'area3': 15, 'area2': 15, 'perimeter1': 15, 'area1': 12, 'radius3': 10, 'concavity1': 9, 'concave_points3': 6, 'perimeter2': 6, 'concavity3': 6, 'radius2': 5, 'radius1': 4, 'texture1': 4, 'texture3': 3, 'concave_points2': 3, 'concave_points1': 3, 'compactness1': 2, 'fractal_dimension1': 2, 'fractal_dimension2': 2, 'fractal_dimension3': 1, 'texture2': 1, 'compactness3': 1, 'smoothness3': 1, 'symmetry1': 1, 'concavity2': 1, 'symmetry3': 1}
Testing configuration with 100 trees and 5 features.
Configuration: 100 trees, 5 features, Accuracy: 0.92, Feature counts: {'radius3': 21, 'area3': 18, 'concave_points3': 14, 'perimeter3': 13, 'area2': 12, 'area1': 12, 'radius1': 8, 'concavity3': 8, 'concave_points1': 6, 'concavity1': 5, 'perimeter1': 4, 'smoothness3': 3, 'perimeter2': 3, 'radius2': 3, 'texture1': 3, 'texture3': 3, 'compactness3': 2, 'fractal_dimension3': 1, 'smoothness1': 1, 'compactness1': 1, 'symmetry3': 1, 'texture2': 1}
Best configuration: 75 trees, 1 features
Highest accuracy: 0.9384615384615385
Feature counts for best configuration: {'radius3': 20, 'concavity3': 17, 'radius2': 16, 'smoothness2': 15, 'concavity2': 13, 'area1': 13, 'concave_points3': 13, 'perimeter2': 12, 'fractal_dimension3': 12, 'texture1': 11, 'smoothness1': 11, 'symmetry3': 11, 'concavity1': 10, 'perimeter1': 10, 'texture2': 9, 'concave_points2': 9, 'compactness2': 9, 'compactness1': 9, 'smoothness3': 9, 'symmetry2': 8, 'area3': 8, 'fractal_dimension1': 8, 'concave_points1': 8, 'perimeter3': 7, 'fractal_dimension2': 6, 'radius1': 6, 'area2': 6, 'symmetry1': 6, 'texture3': 5, 'compactness3': 2}
Building decision forest for ... wdbc
Hyperparameter tuning for Decision Forest...
Testing configuration with 1 trees and 1 features.
Configuration: 1 trees, 1 features, Accuracy: 0.88, Feature counts: {'radius3': 1}
Testing configuration with 1 trees and 2 features.
Configuration: 1 trees, 2 features, Accuracy: 0.90, Feature counts: {'perimeter3': 1}
Testing configuration with 1 trees and 4 features.
Configuration: 1 trees, 4 features, Accuracy: 0.88, Feature counts: {'radius3': 1}
Testing configuration with 1 trees and 5 features.
Configuration: 1 trees, 5 features, Accuracy: 0.89, Feature counts: {'concave_points3': 1}
Testing configuration with 10 trees and 1 features.
Configuration: 10 trees, 1 features, Accuracy: 0.91, Feature counts: {'smoothness2': 49, 'symmetry3': 45, 'smoothness3': 36, 'concavity3': 15, 'radius2': 10, 'radius3': 2, 'area3': 1, 'perimeter1': 1, 'perimeter3': 1}
Testing configuration with 10 trees and 2 features.
Configuration: 10 trees, 2 features, Accuracy: 0.90, Feature counts: {'fractal_dimension2': 47, 'texture3': 40, 'perimeter2': 36, 'symmetry2': 18, 'texture2': 16, 'symmetry1': 11, 'concavity3': 4, 'perimeter1': 2, 'area3': 1, 'concave_points3': 1}
Testing configuration with 10 trees and 4 features.
Configuration: 10 trees, 4 features, Accuracy: 0.91, Feature counts: {'compactness2': 29, 'symmetry1': 12, 'smoothness3': 8, 'symmetry3': 6, 'smoothness2': 6, 'compactness3': 3, 'concave_points2': 3, 'texture1': 2, 'concave_points3': 2, 'area3': 2, 'smoothness1': 1, 'perimeter3': 1, 'radius1': 1}
Testing configuration with 10 trees and 5 features.
Configuration: 10 trees, 5 features, Accuracy: 0.90, Feature counts: {'perimeter2': 8, 'concavity3': 6, 'fractal_dimension2': 5, 'fractal_dimension3': 5, 'area3': 3, 'radius2': 2, 'compactness3': 2, 'compactness1': 2, 'radius3': 1, 'smoothness1': 1, 'radius1': 1, 'perimeter1': 1, 'texture1': 1, 'compactness2': 1}
Testing configuration with 25 trees and 1 features.
Configuration: 25 trees, 1 features, Accuracy: 0.85, Feature counts: {'fractal_dimension3': 180, 'texture3': 80, 'symmetry1': 52, 'smoothness2': 49, 'symmetry3': 45, 'symmetry2': 43, 'smoothness1': 41, 'compactness2': 38, 'concave_points1': 32, 'concave_points2': 24, 'perimeter2': 18, 'radius2': 10, 'area2': 8, 'perimeter1': 2, 'area3': 2, 'radius3': 1, 'area1': 1, 'concavity1': 1}
Testing configuration with 25 trees and 2 features.
Configuration: 25 trees, 2 features, Accuracy: 0.90, Feature counts: {'symmetry3': 45, 'compactness2': 44, 'symmetry2': 43, 'compactness3': 42, 'smoothness1': 41, 'fractal_dimension1': 30, 'fractal_dimension2': 27, 'texture3': 26, 'concave_points1': 21, 'concavity3': 15, 'concavity2': 15, 'texture2': 13, 'perimeter2': 8, 'area1': 3, 'concavity1': 2, 'radius1': 2, 'area2': 2, 'perimeter3': 1, 'perimeter1': 1, 'area3': 1, 'concave_points3': 1}
Testing configuration with 25 trees and 4 features.
Configuration: 25 trees, 4 features, Accuracy: 0.93, Feature counts: {'texture1': 83, 'concavity2': 33, 'compactness1': 31, 'smoothness1': 20, 'concavity3': 13, 'smoothness2': 10, 'compactness2': 9, 'concave_points3': 4, 'texture3': 4, 'concavity1': 2, 'area3': 2, 'perimeter2': 2, 'texture2': 2, 'radius3': 2, 'perimeter3': 2, 'perimeter1': 2}
Testing configuration with 25 trees and 5 features.
Configuration: 25 trees, 5 features, Accuracy: 0.92, Feature counts: {'concavity2': 27, 'compactness2': 15, 'smoothness2': 15, 'symmetry1': 11, 'compactness3': 11, 'symmetry2': 7, 'area3': 6, 'texture1': 5, 'area1': 4, 'symmetry3': 4, 'concavity3': 4, 'fractal_dimension1': 3, 'radius3': 3, 'fractal_dimension2': 2, 'perimeter1': 2, 'concave_points1': 2, 'concavity1': 1, 'concave_points3': 1, 'radius2': 1, 'radius1': 1}
Testing configuration with 50 trees and 1 features.
Configuration: 50 trees, 1 features, Accuracy: 0.83, Feature counts: {'texture2': 342, 'fractal_dimension2': 141, 'symmetry2': 129, 'texture3': 120, 'symmetry1': 104, 'symmetry3': 90, 'fractal_dimension3': 90, 'concavity2': 81, 'concave_points2': 72, 'texture1': 70, 'smoothness1': 41, 'smoothness3': 36, 'concave_points1': 32, 'area2': 24, 'compactness1': 19, 'area3': 4, 'perimeter1': 3, 'radius3': 2, 'area1': 2, 'perimeter3': 1, 'concave_points3': 1}
Testing configuration with 50 trees and 2 features.
Configuration: 50 trees, 2 features, Accuracy: 0.91, Feature counts: {'symmetry2': 142, 'symmetry3': 124, 'symmetry1': 107, 'texture3': 92, 'fractal_dimension2': 69, 'fractal_dimension1': 65, 'compactness2': 50, 'texture2': 48, 'compactness1': 46, 'smoothness1': 41, 'smoothness2': 38, 'concavity3': 30, 'radius2': 16, 'concavity2': 16, 'texture1': 8, 'area2': 8, 'perimeter3': 5, 'radius3': 5, 'concave_points2': 5, 'concavity1': 4, 'perimeter2': 3, 'radius1': 2, 'perimeter1': 1, 'area1': 1, 'compactness3': 1, 'concave_points3': 1}
Testing configuration with 50 trees and 4 features.
Configuration: 50 trees, 4 features, Accuracy: 0.92, Feature counts: {'texture2': 120, 'compactness2': 67, 'smoothness2': 57, 'symmetry3': 50, 'symmetry2': 48, 'texture3': 47, 'concavity2': 44, 'smoothness3': 36, 'perimeter2': 20, 'compactness1': 19, 'fractal_dimension2': 16, 'perimeter3': 9, 'smoothness1': 9, 'concave_points1': 8, 'texture1': 8, 'area3': 7, 'radius3': 3, 'area1': 3, 'radius2': 3, 'perimeter1': 3, 'compactness3': 3, 'concave_points3': 3, 'symmetry1': 1, 'concave_points2': 1, 'fractal_dimension1': 1, 'concavity1': 1}
Testing configuration with 50 trees and 5 features.
Configuration: 50 trees, 5 features, Accuracy: 0.92, Feature counts: {'texture2': 58, 'symmetry1': 53, 'perimeter2': 41, 'compactness2': 33, 'concave_points2': 20, 'symmetry2': 17, 'compactness3': 17, 'smoothness1': 15, 'area2': 15, 'concavity3': 15, 'fractal_dimension3': 11, 'texture3': 9, 'radius2': 9, 'smoothness3': 9, 'compactness1': 8, 'fractal_dimension1': 7, 'concavity2': 5, 'concave_points3': 5, 'smoothness2': 5, 'area1': 5, 'area3': 4, 'radius3': 3, 'concavity1': 3, 'concave_points1': 3, 'texture1': 3, 'radius1': 2, 'perimeter1': 2, 'symmetry3': 2, 'perimeter3': 1}
Testing configuration with 75 trees and 1 features.
Configuration: 75 trees, 1 features, Accuracy: 0.85, Feature counts: {'fractal_dimension2': 235, 'fractal_dimension3': 225, 'smoothness3': 216, 'texture1': 175, 'fractal_dimension1': 156, 'symmetry1': 156, 'smoothness1': 123, 'symmetry3': 90, 'symmetry2': 86, 'perimeter2': 54, 'compactness3': 52, 'smoothness2': 49, 'area2': 40, 'compactness2': 38, 'compactness1': 38, 'concavity3': 30, 'radius2': 20, 'perimeter3': 5, 'concavity1': 4, 'area1': 3, 'radius1': 3, 'radius3': 3, 'concave_points3': 2, 'area3': 2, 'perimeter1': 1}
Testing configuration with 75 trees and 2 features.
Configuration: 75 trees, 2 features, Accuracy: 0.90, Feature counts: {'fractal_dimension2': 141, 'texture2': 137, 'texture3': 102, 'smoothness3': 86, 'compactness2': 83, 'fractal_dimension3': 69, 'concavity2': 68, 'fractal_dimension1': 63, 'compactness3': 59, 'perimeter2': 50, 'concave_points2': 40, 'concave_points1': 35, 'radius2': 31, 'compactness1': 30, 'concavity3': 30, 'smoothness2': 28, 'area2': 20, 'symmetry1': 12, 'symmetry3': 10, 'perimeter3': 6, 'area3': 5, 'radius3': 5, 'concave_points3': 5, 'symmetry2': 5, 'area1': 3, 'radius1': 2, 'perimeter1': 2, 'concavity1': 2}
Testing configuration with 75 trees and 4 features.
Configuration: 75 trees, 4 features, Accuracy: 0.91, Feature counts: {'fractal_dimension3': 122, 'fractal_dimension2': 103, 'smoothness2': 69, 'texture2': 61, 'compactness1': 57, 'concave_points2': 56, 'symmetry3': 52, 'concavity2': 48, 'compactness2': 29, 'symmetry1': 20, 'smoothness3': 17, 'concavity3': 14, 'fractal_dimension1': 14, 'area2': 13, 'radius2': 12, 'symmetry2': 10, 'smoothness1': 10, 'radius3': 8, 'perimeter3': 8, 'perimeter1': 5, 'area1': 5, 'area3': 5, 'perimeter2': 5, 'texture1': 5, 'concave_points3': 4, 'concavity1': 4, 'radius1': 3, 'concave_points1': 3, 'compactness3': 1, 'texture3': 1}
Testing configuration with 75 trees and 5 features.
Configuration: 75 trees, 5 features, Accuracy: 0.91, Feature counts: {'symmetry3': 77, 'compactness2': 63, 'symmetry1': 53, 'fractal_dimension2': 50, 'texture3': 32, 'texture1': 31, 'smoothness1': 28, 'compactness3': 23, 'concave_points1': 23, 'compactness1': 20, 'concavity3': 18, 'texture2': 18, 'concavity2': 16, 'concave_points2': 15, 'smoothness2': 15, 'fractal_dimension1': 13, 'area3': 10, 'concavity1': 8, 'area1': 8, 'smoothness3': 7, 'radius1': 7, 'radius3': 6, 'fractal_dimension3': 5, 'perimeter3': 5, 'area2': 4, 'symmetry2': 4, 'perimeter1': 3, 'perimeter2': 3, 'concave_points3': 3, 'radius2': 1}
Testing configuration with 100 trees and 1 features.
Configuration: 100 trees, 1 features, Accuracy: 0.84, Feature counts: {'symmetry1': 312, 'symmetry2': 301, 'fractal_dimension3': 270, 'smoothness2': 245, 'fractal_dimension1': 208, 'fractal_dimension2': 188, 'texture2': 171, 'texture3': 160, 'smoothness3': 144, 'symmetry3': 135, 'compactness3': 130, 'smoothness1': 82, 'compactness2': 76, 'concave_points2': 72, 'concavity3': 60, 'compactness1': 57, 'concavity2': 54, 'concave_points1': 48, 'texture1': 35, 'perimeter2': 18, 'area2': 16, 'radius2': 10, 'radius3': 8, 'perimeter1': 5, 'area3': 5, 'perimeter3': 3, 'radius1': 2, 'concavity1': 1, 'area1': 1}
Testing configuration with 100 trees and 2 features.
Configuration: 100 trees, 2 features, Accuracy: 0.90, Feature counts: {'symmetry1': 387, 'symmetry2': 173, 'fractal_dimension2': 168, 'compactness2': 167, 'smoothness2': 152, 'smoothness1': 127, 'concavity2': 122, 'fractal_dimension1': 121, 'symmetry3': 92, 'concave_points2': 76, 'texture2': 73, 'smoothness3': 64, 'texture3': 62, 'compactness1': 58, 'texture1': 54, 'compactness3': 52, 'fractal_dimension3': 34, 'concave_points1': 28, 'concavity3': 19, 'perimeter2': 16, 'radius2': 14, 'area2': 12, 'radius1': 7, 'area3': 6, 'radius3': 5, 'perimeter1': 5, 'perimeter3': 4, 'concave_points3': 2, 'area1': 2, 'concavity1': 1}
Testing configuration with 100 trees and 4 features.
Configuration: 100 trees, 4 features, Accuracy: 0.90, Feature counts: {'texture2': 229, 'symmetry3': 113, 'smoothness2': 83, 'fractal_dimension2': 72, 'concave_points2': 62, 'concavity2': 58, 'compactness2': 50, 'perimeter2': 49, 'texture3': 48, 'symmetry2': 47, 'concave_points1': 46, 'compactness3': 30, 'area2': 24, 'fractal_dimension1': 23, 'concavity3': 22, 'smoothness1': 20, 'symmetry1': 19, 'radius2': 14, 'perimeter3': 9, 'fractal_dimension3': 9, 'perimeter1': 8, 'area3': 8, 'radius3': 7, 'concavity1': 7, 'compactness1': 7, 'area1': 5, 'concave_points3': 5, 'smoothness3': 4, 'texture1': 3, 'radius1': 2}
Testing configuration with 100 trees and 5 features.
Configuration: 100 trees, 5 features, Accuracy: 0.91, Feature counts: {'symmetry3': 95, 'symmetry1': 66, 'smoothness1': 57, 'compactness1': 54, 'smoothness3': 53, 'fractal_dimension3': 51, 'concavity3': 51, 'texture1': 44, 'perimeter2': 40, 'concave_points2': 35, 'concavity2': 30, 'smoothness2': 29, 'compactness3': 27, 'radius3': 17, 'fractal_dimension2': 17, 'symmetry2': 14, 'radius2': 13, 'fractal_dimension1': 10, 'concave_points3': 9, 'perimeter3': 8, 'perimeter1': 7, 'area1': 7, 'area2': 6, 'concave_points1': 6, 'compactness2': 5, 'radius1': 5, 'concavity1': 4, 'area3': 4, 'texture3': 3}
Best configuration: 25 trees, 4 features
Highest accuracy: 0.9318681318681319
Feature counts for best configuration: {'texture1': 83, 'concavity2': 33, 'compactness1': 31, 'smoothness1': 20, 'concavity3': 13, 'smoothness2': 10, 'compactness2': 9, 'concave_points3': 4, 'texture3': 4, 'concavity1': 2, 'area3': 2, 'perimeter2': 2, 'texture2': 2, 'radius3': 2, 'perimeter3': 2, 'perimeter1': 2}
Reading data from C:/Users/User/git/CART-method_with_randomf-forest_and_decision-forest/Data/car/car.csv
Preprocessing data...
Splitting data into training and testing sets...
Building random forest for ... car
Hyperparameter tuning for Random Forest...
Testing configuration with 1 trees and 1 features.
Configuration: 1 trees, 1 features, Accuracy: 0.69, Feature counts: {'maint': 8, 'doors': 7, 'buying': 5, 'safety': 4, 'persons': 4, 'lug_boot': 3}
Testing configuration with 1 trees and 2 features.
Configuration: 1 trees, 2 features, Accuracy: 0.83, Feature counts: {'buying': 8, 'lug_boot': 6, 'persons': 6, 'safety': 5, 'maint': 3, 'doors': 3}
Testing configuration with 1 trees and 3 features.
Configuration: 1 trees, 3 features, Accuracy: 0.84, Feature counts: {'doors': 8, 'maint': 6, 'safety': 5, 'persons': 5, 'buying': 5, 'lug_boot': 5}
Testing configuration with 1 trees and 4 features.
Configuration: 1 trees, 4 features, Accuracy: 0.85, Feature counts: {'maint': 11, 'lug_boot': 6, 'safety': 5, 'doors': 5, 'persons': 4, 'buying': 4}
Testing configuration with 10 trees and 1 features.
Configuration: 10 trees, 1 features, Accuracy: 0.80, Feature counts: {'persons': 46, 'safety': 45, 'doors': 39, 'maint': 37, 'buying': 36, 'lug_boot': 26}
Testing configuration with 10 trees and 2 features.
Configuration: 10 trees, 2 features, Accuracy: 0.87, Feature counts: {'maint': 72, 'doors': 64, 'buying': 63, 'safety': 57, 'persons': 55, 'lug_boot': 54}
Testing configuration with 10 trees and 3 features.
Configuration: 10 trees, 3 features, Accuracy: 0.88, Feature counts: {'maint': 67, 'buying': 61, 'safety': 58, 'doors': 56, 'lug_boot': 48, 'persons': 46}
Testing configuration with 10 trees and 4 features.
Configuration: 10 trees, 4 features, Accuracy: 0.90, Feature counts: {'maint': 58, 'buying': 54, 'doors': 46, 'lug_boot': 45, 'safety': 44, 'persons': 32}
Testing configuration with 25 trees and 1 features.
Configuration: 25 trees, 1 features, Accuracy: 0.83, Feature counts: {'maint': 131, 'doors': 114, 'buying': 114, 'persons': 111, 'safety': 108, 'lug_boot': 94}
Testing configuration with 25 trees and 2 features.
Configuration: 25 trees, 2 features, Accuracy: 0.87, Feature counts: {'maint': 177, 'buying': 162, 'doors': 159, 'persons': 154, 'lug_boot': 133, 'safety': 127}
Testing configuration with 25 trees and 3 features.
Configuration: 25 trees, 3 features, Accuracy: 0.90, Feature counts: {'maint': 152, 'buying': 150, 'doors': 141, 'safety': 129, 'lug_boot': 124, 'persons': 108}
Testing configuration with 25 trees and 4 features.
Configuration: 25 trees, 4 features, Accuracy: 0.92, Feature counts: {'maint': 167, 'buying': 148, 'doors': 136, 'lug_boot': 109, 'safety': 100, 'persons': 81}
Testing configuration with 50 trees and 1 features.
Configuration: 50 trees, 1 features, Accuracy: 0.84, Feature counts: {'safety': 235, 'doors': 228, 'persons': 217, 'maint': 205, 'buying': 187, 'lug_boot': 169}
Testing configuration with 50 trees and 2 features.
Configuration: 50 trees, 2 features, Accuracy: 0.88, Feature counts: {'doors': 335, 'buying': 332, 'safety': 321, 'maint': 318, 'persons': 313, 'lug_boot': 270}
Testing configuration with 50 trees and 3 features.
Configuration: 50 trees, 3 features, Accuracy: 0.91, Feature counts: {'maint': 344, 'buying': 321, 'doors': 296, 'lug_boot': 257, 'safety': 247, 'persons': 226}
Testing configuration with 50 trees and 4 features.
Configuration: 50 trees, 4 features, Accuracy: 0.92, Feature counts: {'maint': 316, 'buying': 299, 'doors': 248, 'safety': 216, 'lug_boot': 200, 'persons': 163}
Testing configuration with 75 trees and 1 features.
Configuration: 75 trees, 1 features, Accuracy: 0.82, Feature counts: {'persons': 323, 'doors': 306, 'buying': 306, 'maint': 304, 'safety': 304, 'lug_boot': 282}
Testing configuration with 75 trees and 2 features.
Configuration: 75 trees, 2 features, Accuracy: 0.88, Feature counts: {'maint': 555, 'buying': 531, 'doors': 531, 'safety': 478, 'persons': 460, 'lug_boot': 423}
Testing configuration with 75 trees and 3 features.
Configuration: 75 trees, 3 features, Accuracy: 0.91, Feature counts: {'maint': 532, 'buying': 503, 'doors': 475, 'safety': 413, 'lug_boot': 379, 'persons': 342}
Testing configuration with 75 trees and 4 features.
Configuration: 75 trees, 4 features, Accuracy: 0.92, Feature counts: {'maint': 472, 'buying': 436, 'doors': 393, 'safety': 350, 'lug_boot': 343, 'persons': 254}
Testing configuration with 100 trees and 1 features.
Configuration: 100 trees, 1 features, Accuracy: 0.82, Feature counts: {'safety': 412, 'maint': 404, 'persons': 393, 'doors': 389, 'buying': 382, 'lug_boot': 367}
Testing configuration with 100 trees and 2 features.
Configuration: 100 trees, 2 features, Accuracy: 0.89, Feature counts: {'maint': 678, 'buying': 656, 'doors': 645, 'safety': 640, 'persons': 583, 'lug_boot': 535}
Testing configuration with 100 trees and 3 features.
Configuration: 100 trees, 3 features, Accuracy: 0.91, Feature counts: {'maint': 729, 'buying': 588, 'doors': 585, 'safety': 532, 'lug_boot': 503, 'persons': 447}
Testing configuration with 100 trees and 4 features.
Configuration: 100 trees, 4 features, Accuracy: 0.91, Feature counts: {'maint': 609, 'buying': 578, 'doors': 452, 'lug_boot': 437, 'safety': 407, 'persons': 334}
Best configuration: 25 trees, 4 features
Highest accuracy: 0.9167872648335745
Feature counts for best configuration: {'maint': 167, 'buying': 148, 'doors': 136, 'lug_boot': 109, 'safety': 100, 'persons': 81}
Building decision forest for ... car
Hyperparameter tuning for Decision Forest...
Testing configuration with 1 trees and 1 features.
Configuration: 1 trees, 1 features, Accuracy: 0.71, Feature counts: {'maint': 3}
Testing configuration with 1 trees and 2 features.
Configuration: 1 trees, 2 features, Accuracy: 0.71, Feature counts: {'doors': 3}
Testing configuration with 1 trees and 3 features.
Configuration: 1 trees, 3 features, Accuracy: 0.65, Feature counts: {'doors': 18, 'maint': 9, 'safety': 5}
Testing configuration with 1 trees and 4 features.
Configuration: 1 trees, 4 features, Accuracy: 0.64, Feature counts: {'doors': 22, 'lug_boot': 11, 'maint': 9}
Testing configuration with 10 trees and 1 features.
Configuration: 10 trees, 1 features, Accuracy: 0.71, Feature counts: {'maint': 9, 'doors': 9, 'lug_boot': 6, 'safety': 2}
Testing configuration with 10 trees and 2 features.
Configuration: 10 trees, 2 features, Accuracy: 0.71, Feature counts: {'lug_boot': 18, 'buying': 9, 'maint': 8, 'safety': 5, 'persons': 5, 'doors': 5}
Testing configuration with 10 trees and 3 features.
Configuration: 10 trees, 3 features, Accuracy: 0.71, Feature counts: {'doors': 66, 'maint': 33, 'persons': 17, 'buying': 13, 'safety': 11, 'lug_boot': 6}
Testing configuration with 10 trees and 4 features.
Configuration: 10 trees, 4 features, Accuracy: 0.75, Feature counts: {'doors': 146, 'maint': 88, 'lug_boot': 62, 'persons': 46, 'buying': 24, 'safety': 19}
Testing configuration with 25 trees and 1 features.
Configuration: 25 trees, 1 features, Accuracy: 0.71, Feature counts: {'buying': 15, 'safety': 12, 'persons': 10, 'doors': 9, 'maint': 9, 'lug_boot': 6}
Testing configuration with 25 trees and 2 features.
Configuration: 25 trees, 2 features, Accuracy: 0.71, Feature counts: {'maint': 30, 'persons': 29, 'doors': 20, 'buying': 20, 'safety': 13, 'lug_boot': 13}
Testing configuration with 25 trees and 3 features.
Configuration: 25 trees, 3 features, Accuracy: 0.71, Feature counts: {'doors': 88, 'maint': 75, 'buying': 53, 'lug_boot': 53, 'persons': 43, 'safety': 21}
Testing configuration with 25 trees and 4 features.
Configuration: 25 trees, 4 features, Accuracy: 0.74, Feature counts: {'doors': 196, 'maint': 174, 'lug_boot': 124, 'persons': 88, 'safety': 52, 'buying': 51}
Testing configuration with 50 trees and 1 features.
Configuration: 50 trees, 1 features, Accuracy: 0.71, Feature counts: {'doors': 30, 'persons': 26, 'lug_boot': 20, 'maint': 18, 'buying': 18, 'safety': 10}
Testing configuration with 50 trees and 2 features.
Configuration: 50 trees, 2 features, Accuracy: 0.71, Feature counts: {'maint': 99, 'doors': 77, 'lug_boot': 68, 'buying': 43, 'safety': 30, 'persons': 24}
Testing configuration with 50 trees and 3 features.
Configuration: 50 trees, 3 features, Accuracy: 0.71, Feature counts: {'doors': 237, 'maint': 211, 'lug_boot': 114, 'persons': 88, 'buying': 62, 'safety': 37}
Testing configuration with 50 trees and 4 features.
Configuration: 50 trees, 4 features, Accuracy: 0.74, Feature counts: {'doors': 348, 'maint': 301, 'lug_boot': 222, 'persons': 211, 'buying': 155, 'safety': 110}
Testing configuration with 75 trees and 1 features.
Configuration: 75 trees, 1 features, Accuracy: 0.71, Feature counts: {'buying': 57, 'maint': 39, 'safety': 38, 'lug_boot': 24, 'doors': 18, 'persons': 12}
Testing configuration with 75 trees and 2 features.
Configuration: 75 trees, 2 features, Accuracy: 0.71, Feature counts: {'doors': 123, 'buying': 69, 'maint': 69, 'safety': 56, 'lug_boot': 53, 'persons': 37}
Testing configuration with 75 trees and 3 features.
Configuration: 75 trees, 3 features, Accuracy: 0.71, Feature counts: {'doors': 397, 'maint': 186, 'persons': 122, 'lug_boot': 119, 'safety': 86, 'buying': 65}
Testing configuration with 75 trees and 4 features.
Configuration: 75 trees, 4 features, Accuracy: 0.71, Feature counts: {'doors': 611, 'lug_boot': 348, 'maint': 274, 'persons': 260, 'buying': 160, 'safety': 132}
Testing configuration with 100 trees and 1 features.
Configuration: 100 trees, 1 features, Accuracy: 0.71, Feature counts: {'doors': 48, 'lug_boot': 46, 'buying': 45, 'maint': 42, 'safety': 34, 'persons': 30}
Testing configuration with 100 trees and 2 features.
Configuration: 100 trees, 2 features, Accuracy: 0.71, Feature counts: {'doors': 200, 'persons': 96, 'buying': 94, 'maint': 93, 'lug_boot': 81, 'safety': 32}
Testing configuration with 100 trees and 3 features.
Configuration: 100 trees, 3 features, Accuracy: 0.71, Feature counts: {'doors': 328, 'maint': 220, 'persons': 178, 'lug_boot': 169, 'safety': 106, 'buying': 104}
Testing configuration with 100 trees and 4 features.
Configuration: 100 trees, 4 features, Accuracy: 0.71, Feature counts: {'doors': 656, 'lug_boot': 480, 'maint': 450, 'persons': 386, 'buying': 268, 'safety': 255}
Best configuration: 10 trees, 4 features
Highest accuracy: 0.7539797395079595
Feature counts for best configuration: {'doors': 146, 'maint': 88, 'lug_boot': 62, 'persons': 46, 'buying': 24, 'safety': 19}
Total time taken: 749.24 seconds
